if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
    source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi
# ============================================================================= #
# *** ➜ ➜ ➜ VARIABLES
# ============================================================================= #
export DOTFILES="$HOME/.dotfiles"
export ZSH_HOME="$HOME/.zsh"
export EDITOR=micro
export SYSTEMD_EDITOR=${EDITOR}
export GIT_DISCOVERY_ACROSS_FILESYSTEM=true # etckeeper on bedrock
# ============================================================================= #
# *** ➜ ➜ ➜ ZINIT [INSTALLER]
# ============================================================================= #
#ZINIT_HOME="${ZINIT_HOME:-${ZSH_HOME:-${ZDOTDIR:-${HOME/.zsh}}/.zinit}}"
if [[ ! -f $ZSH_HOME/.zinit/bin/zinit.zsh ]]; then
    print -P "%F{33}▓▒░ %F{220}Installing %F{33}DHARMA%F{220} Initiative Plugin Manager (%F{33}zdharma/zinit%F{220})…%f"
    command mkdir -p "$ZSH_HOME/.zinit" && command chmod g-rwX "$ZSH_HOME/.zinit"
    command git clone https://github.com/zdharma/zinit "$ZSH_HOME/.zinit/bin" && \
        print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
        print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi
source "$ZSH_HOME/.zinit/bin/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit
# A binary Zsh module which transparently and automatically compiles sourced scripts
#module_path+=( "${HOME}/.zsh/.zinit/bin/zmodules/Src" )
#zmodload zdharma/zplugin &>/dev/null

# Functions to make configuration less verbose
# zt() : First argument is a wait time and suffix, ie "0a". Anything that doesn't match will be passed as if it were an ice mod. Default ices depth'3' and lucid
#zt(){ zinit depth'3' lucid ${1/#[0-9][a-c]/wait"${1}"} "${@:2}"; }
# ============================================================================= #
# *** ➜ ➜ ➜ OH-MY-ZSH [LIBRARY] [PLUGINS] 
# ============================================================================= #
setopt promptsubst
# LOAD TMUX 
#zinit lucid for \
#    atinit"
#        ZSH_TMUX_FIXTERM=true
#        ZSH_TMUX_AUTOSTART=true
#        ZSH_TMUX_AUTOCONNECT=true
#    " \
#    OMZP::tmux \
#    atinit"HIST_STAMPS=dd.mm.yyyy" \

zinit wait lucid for \
    OMZL::history.zsh \
	OMZL::clipboard.zsh \
	OMZL::compfix.zsh \
	OMZL::correction.zsh \
    atload"
        alias ..='cd ..'
        alias ...='cd ../..'
        alias ....='cd ../../..'
        alias .....='cd ../../../..'
    " \
	OMZL::directories.zsh \
	OMZL::git.zsh \
	OMZL::grep.zsh \
	OMZL::key-bindings.zsh \
	OMZL::spectrum.zsh \
	OMZL::termsupport.zsh \
    atload"
        alias gcd='gco dev'
    " \
	OMZP::git \
    OMZP::extract \
    OMZP::systemd/systemd.plugin.zsh \
    OMZP::sudo/sudo.plugin.zsh \
    OMZP::pip/pip.plugin.zsh \
    OMZP::pyenv/pyenv.plugin.zsh \
    OMZP::nvm/nvm.plugin.zsh 

# ============================================================================= #
# *** ➜ ➜ ➜ [PLUGINS]
# ============================================================================= #
# @source: https://github.com/crivotz/dot_files/blob/master/linux/zplugin/zshrc
# These plugins should be loaded after ohmyzsh plugins

zinit wait lucid for \
    light-mode atinit"ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20" atload"_zsh_autosuggest_start" \
        zsh-users/zsh-autosuggestions \
    light-mode atinit"
        typeset -gA FAST_HIGHLIGHT;
        FAST_HIGHLIGHT[git-cmsg-len]=100;
        zpcompinit;
        zpcdreplay;
    " \
        zdharma/fast-syntax-highlighting \
    light-mode blockf atpull'zinit creinstall -q .' \
    atinit"
        zstyle ':completion:*' completer _expand _complete _ignored _approximate
        zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'
        zstyle ':completion:*' menu select=2
        zstyle ':completion:*' select-prompt '%SScrolling active: current selection at %p%s'
        zstyle ':completion:*:descriptions' format '-- %d --'
        zstyle ':completion:*:processes' command 'ps -au$USER'
        zstyle ':completion:complete:*:options' sort false
        zstyle ':fzf-tab:complete:_zlua:*' query-string input
        zstyle ':completion:*:*:*:*:processes' command 'ps -u $USER -o pid,user,comm,cmd -w -w'
        zstyle ':fzf-tab:complete:kill:argument-rest' extra-opts --preview=$extract'ps --pid=$in[(w)1] -o cmd --no-headers -w -w' --preview-window=down:3:wrap
        zstyle ':fzf-tab:complete:cd:*' extra-opts --preview=$extract'exa -1 --color=always ${~ctxt[hpre]}$in'
    " \
        zsh-users/zsh-completions \
    bindmap"^R -> ^H" atinit"
        zstyle :history-search-multi-word page-size 10
        zstyle :history-search-multi-word highlight-color fg=red,bold
        zstyle :plugin:history-search-multi-word reset-prompt-protect 1
    " \
        zdharma/history-search-multi-word \
    reset \
    atclone"local P=${${(M)OSTYPE:#*darwin*}:+g}
            \${P}sed -i \
            '/DIR/c\DIR 38;5;63;1' LS_COLORS; \
            \${P}dircolors -b LS_COLORS > c.zsh" \
    atpull'%atclone' pick"c.zsh" nocompile'!' \
    atload'zstyle ":completion:*" list-colors “${(s.:.)LS_COLORS}”' \
        trapd00r/LS_COLORS \
    mattberther/zsh-pyenv \
    mafredri/zsh-async \
    mattmc3/zsh-cd-ls \
    zpm-zsh/ls \
    MichaelAquilina/zsh-you-should-use \
    unixorn/git-extra-commands \
    lukechilds/zsh-better-npm-completion \
    denysdovhan/gitio-zsh

zinit ice depth=1; zinit light romkatv/powerlevel10k
# ============================================================================= #
# *** ➜ ➜ ➜ LOCAL CONFIG
# ============================================================================= #
zinit is-snippet for \
    if"[[ -f $HOME/.localrc  ]]" $HOME/.localrc
# ============================================================================= #
# *** ➜ ➜ ➜ p10k PROMPT
# ============================================================================= #
source "$DOTFILES/zsh/themes/p10k"

