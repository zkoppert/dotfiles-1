if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
    source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi; MYPROMPT='1'
export DOTFILES="$HOME/.dotfiles"
export ZSH_HOME="$HOME/.zsh"
export ZINIT_HOME="$HOME/.zinit"
ZALIASES="$DOTFILES/zsh/aliases"
ZFUNCTIONS="$DOTFILES/zsh/functions"
ZCOMPLETIONS="$DOTFILES/zsh/completions"
DIRSTACKFILE="$HOME/.cache/zsh/dirs"
if [[ ! -a $DIRSTACKFILE ]]; then
    mkdir -p $DIRSTACKFILE[0,-5]
    touch $DIRSTACKFILE
fi
if [[ -f $DIRSTACKFILE ]] && [[ $#dirstack -eq 0 ]]; then
    dirstack=( ${(f)"$(< $DIRSTACKFILE)"} )
fi
DIRSTACKSIZE=20
#========================================================================== #
# *** ➜ ➜ ➜ ZINIT
# ============================================================================= #
if [[ ! -f "$ZINIT_HOME/bin/zinit.zsh" ]]; then
    print -P "%F{33}▓▒░ %F{220}Installing %F{33}DHARMA%F{220} Initiative Plugin Manager (%F{33}zdharma/zinit%F{220})…%f"
    command mkdir -p "$HOME/.zinit" && command chmod g-rwX "$HOME/.zinit"
    command git clone --quiet https://github.com/zdharma/zinit "$HOME/.zinit/bin" && \
        print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
        print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi; source "$ZINIT_HOME/bin/zinit.zsh"
(( ${+_comps} )) && _comps[zinit]=_zinit
autoload -Uz _zinit
module_path+=( "${HOME}/.zinit/bin/zmodules/Src" )
dotsvar=( gtkrc-2.0 kwinrulesrc '\.\./' \.config/gtk-3\.0/settings\.ini )
fpath+=( "${ZFUNCTIONS}" )
# ============================================================================= #
chpwd() {
    print -l $PWD ${(u)dirstack} >>$DIRSTACKFILE
    local d="$(sort -u $DIRSTACKFILE )"
    echo "$d" > $DIRSTACKFILE
}
zt()       { zinit depth'3' lucid ${1/#[0-9][a-c]/wait"${1}"} "${@:2}"; }
ztb()      { zinit ice wait"0a" lucid             "${@}"; }
ztb1()     { zinit ice wait"0b" lucid             "${@}"; }
ztb2()     { zinit ice wait"0c" lucid             "${@}"; }
zcommand() { zinit ice wait"0b" lucid as"command" "${@}"; }
zload()    { zinit load                           "${@}"; }
zpack()    { zinit pack                           "${@}"; }
zlight()   { zinit light                          "${@}"; }
zsnippet() { zinit snippet                        "${@}"; }
auto-ls()  { ls; }
# ============================================================================= #
[[ ${chpwd_functions[(r)auto-ls]} == auto-ls ]] || chpwd_functions=( auto-ls $chpwd_functions )
zmodload zdharma/zplugin &>/dev/null
zmodload zdharma/zui &>/dev/null
    for func in $ZFUNCTIONS/*; do
        autoload -Uz ${func:t}
    done
unset func
autoload -Uz chpwd_recent_dirs add-zsh-hook
add-zsh-hook chpwd chpwd_recent_dirs
# ============================================================================= #
zinit light-mode for \
        zpm-zsh/ls \
        zpm-zsh/material-colors \
        zinit-zsh/z-a-patch-dl \
        zinit-zsh/z-a-as-monitor \
        zinit-zsh/z-a-bin-gem-node \
        zinit-zsh/z-a-submods \
        zinit-zsh/z-a-rust
# ============================================================================= #
# *** ➜ ➜ ➜ OH-MY-ZSH
# ============================================================================= #
setopt promptsubst

zt 0a light-mode for \
        OMZ::lib/git.zsh \
        OMZ::plugins/git/git.plugin.zsh \
        OMZ::lib/history.zsh \
        OMZ::lib/clipboard.zsh \
        OMZ::lib/directories.zsh \
        OMZ::lib/compfix.zsh \
        OMZ::lib/grep.zsh \
        OMZ::lib/termsupport.zsh \
        OMZ::lib/spectrum.zsh \
        OMZ::lib/theme-and-appearance.zsh \
        OMZ::lib/key-bindings.zsh

zt 0a light-mode for \
        OMZ::plugins/systemd/systemd.plugin.zsh \
        OMZ::plugins/sudo/sudo.plugin.zsh \
        OMZ::plugins/extract/extract.plugin.zsh \
        OMZ::plugins/gpg-agent/gpg-agent.plugin.zsh \
        OMZ::plugins/npm/npm.plugin.zsh \
        OMZ::plugins/pip/pip.plugin.zsh \
        OMZ::plugins/pyenv/pyenv.plugin.zsh \
    atload'zstyle ":completion:*" special-dirs false' \
        OMZL::completion.zsh \
    atload"zpcompinit" as"completion" \
        OMZ::plugins/docker/_docker
# ============================================================================= #
# Additional completion definitions
zt 0a light-mode for \
    blockf atload"zpcompinit" as"completion" \
        lukechilds/zsh-better-npm-completion \
    blockf atpull'zinit creinstall -q .' \
        zsh-users/zsh-completions \
    blockf nocompletions compile'functions/*~*.zwc' \
        marlonrichert/zsh-edit 
bindkey -r '^[[A'
bindkey -r '^[[B'
__bind_history_keys() {
    bindkey '^[[A' history-substring-search-up
    bindkey '^[[B' history-substring-search-down
}
zt 0a light-mode for \
    atload'__bind_history_keys' atload'bindkey "${terminfo[kcuu1]}" history-substring-search-up; \
    bindkey "${terminfo[kcud1]}" history-substring-search-down' \
        zsh-users/zsh-history-substring-search \
        zdharma/history-search-multi-word \
    atinit"ZINIT[COMPINIT_OPTS]='-i' zpcompinit; zpcdreplay" \
        zdharma/fast-syntax-highlighting \
    atinit"ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20" atload"_zsh_autosuggest_start" \
        zsh-users/zsh-autosuggestions
# ============================================================================= #
zt 0b light-mode for \
        mafredri/zsh-async \
        denysdovhan/gitio-zsh \
        unixorn/git-extra-commands \
        MichaelAquilina/zsh-you-should-use \
        RobSis/zsh-reentry-hook

#ztb1; zlight marlonrichert/zsh-autocomplete

zt 0c light-mode for \
pick'autoenv.zsh' nocompletions \
        Tarrasch/zsh-autoenv \
as"program" make'!' atclone'./direnv hook zsh > zhook.zsh' \
    atpull'%atclone' src"zhook.zsh" \
        direnv/direnv \
as'command' pick'bin/pyenv' atinit'export PYENV_ROOT="$PWD"' \
    atclone'PYENV_ROOT="$PWD" ./libexec/pyenv init - > zpyenv.zsh' \
    atpull"%atclone" src"zpyenv.zsh" nocompile'!' \
        pyenv/pyenv

zt 0c light-mode for lukechilds/zsh-nvm \
from'gh-r' as'command' atinit'export PATH="$HOME/.yarn/bin:$PATH"' \
    mv'yarn* -> yarn' pick"yarn/bin/yarn" bpick'*.tar.gz' \
        yarnpkg/yarn \
from"gh-r" as"program" mv"docker* -> docker-compose" bpick"*linux*" \
        docker/compose \
from"gh-r" as"program" mv"micro* -> micro" bpick"*linux64*" atpull'%atclone' \
        zyedidia/micro \
from"gh-r" as"program" \
        junegunn/fzf-bin

zt 0c light-mode for \
from"gh-r" atclone'./just --completions zsh > _just' atpull'%atclone' \
        casey/just \
from"gh-r" as"program" mv"bat* -> bat" pick"bat/bat" atload"alias cat=bat" \
        sharkdp/bat \
atclone'mv -f **/*.zsh _bat' atpull'%atclone' \
        @sharkdp/bat \
        @sharkdp/hyperfine \
        @sharkdp/fd \
as"program" pick"src/batgrep.sh" \
as"program" pick"src/batdiff.sh" \
            'eth-p/bat-extras'
    alias rg=batgrep.sh
    alias bd=batdiff.sh
    alias man=batman.sh

zpack for ls_colors
zpack for @asciidoctor
#zinit pack"default" git for pyenv
#zinit load zdharma/zinit-configs
# ============================================================================= #
# *** ➜ ➜ ➜ [THEMES]
# ============================================================================= #
zinit ice for load'![[ $MYPROMPT = 1 ]]' unload'![[ $MYPROMPT != 1 ]]' \
depth='1'; zinit light romkatv/powerlevel10k

# Load when MYPROMPT == 2
zinit ice load'![[ $MYPROMPT = 2 ]]' unload'![[ $MYPROMPT != 2 ]]' \
    pick"/dev/null" multisrc"{async,pure}.zsh" \
    atload'!prompt_pure_precmd' lucid nocd
zinit load sindresorhus/pure

# Load when MYPROMPT == 3
zinit ice load'![[ $MYPROMPT = 3 ]]' unload'![[ $MYPROMPT != 3 ]]' \
    atload'!geometry::prompt' lucid nocd
zinit load geometry-zsh/geometry
# ============================================================================= #
# *** ➜ ➜ ➜ [LOCAL]
# ============================================================================= #
zinit is-snippet for if"[[ -f $HOME/.localrc  ]]" $HOME/.localrc
# ============================================================================= #
# *** ➜ ➜ ➜ [END]
# ============================================================================= #
unset -f zt ztb ztb1 ztb2 zcommand zload zpack zlight zsnippet
zinit ice if"[[ $MYPROMPT = 1  ]]"; source "$DOTFILES/zsh/themes/p10k.zsh"
