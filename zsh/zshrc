# ============================================================================= #
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
    source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi
export DOTFILES="$HOME/.dotfiles"
export ZSH_HOME="$HOME/.zsh"
export ZINIT_HOME="$HOME/.zinit"
export SYSTEMD_EDITOR="${EDITOR}"
export GIT_DISCOVERY_ACROSS_FILESYSTEM='true' # etckeeper on bedrock
MYPROMPT='p10k'
#CURRENT_DIR=${0:a:h}
for file in "${NVM_DIR}/nvm.sh" \
            "${NVM_DIR}/bash_completion"
#            "${HOME}/.zsh/prompts.zsh" \
#            "${HOME}/.zsh/aliases.zsh" \
#            "${HOME}/.zsh/set_history.zsh" \
#            "${HOME}/.zsh/zinit.zsh" \
#            "${HOME}/.zsh/completions.zsh" \
#            "${HOME}/.zsh/other/command-not-found.zsh" \
#            "${HOME}/.local/bin/virtualenvwrapper_lazy.sh"
do
    [ -s "${file}" ] && source "${file}"
done
# ============================================================================= #
# *** ➜ ➜ ➜ ZINIT [INSTALLER]
# ============================================================================= #
if [[ ! -f "$ZINIT_HOME/bin/zinit.zsh" ]]; then
    print -P "%F{33}▓▒░ %F{220}Installing %F{33}DHARMA%F{220} Initiative Plugin Manager (%F{33}zdharma/zinit%F{220})…%f"
    command mkdir -p "$HOME/.zinit" && command chmod g-rwX "$HOME/.zinit"
    command git clone --quiet https://github.com/zdharma/zinit "$HOME/.zinit/bin" && \
        print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
        print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi; source "$ZINIT_HOME/bin/zinit.zsh"
# ============================================================================= #
# *** ➜ ➜ ➜ [CONFIG]
# ============================================================================= #
(( ${+_comps} )) && _comps[zinit]=_zinit
autoload -Uz _zinit
fpath+=( "${DOTFILES}/zsh/functions/" )
    for func in $DOTFILES/zsh/functions/*; do
        autoload -Uz ${func:t}
    done
# A binary Zsh module which transparently and automatically compiles sourced scripts
module_path+=( "${HOME}/.zinit/bin/zmodules/Src" )
zmodload zdharma/zplugin &>/dev/null
[[ ${chpwd_functions[(r)auto-ls]} == auto-ls ]] || chpwd_functions=( auto-ls $chpwd_functions )
# ============================================================================= #
turbo0()   { zinit ice wait"0a" lucid             "${@}"; }
turbo1()   { zinit ice wait"0b" lucid             "${@}"; }
turbo2()   { zinit ice wait"0c" lucid             "${@}"; }
zcommand() { zinit ice wait"0b" lucid as"command" "${@}"; }
zload()    { zinit load                           "${@}"; }
zlight()   { zinit light                          "${@}"; }
zsnippet() { zinit snippet                        "${@}"; }
# ============================================================================= #
setopt promptsubst
setopt complete_aliases
# Oh-My-Zsh snippets
zinit is-snippet for OMZ::lib/directories.zsh
zinit is-snippet for OMZ::lib/compfix.zsh
zinit is-snippet for OMZ::lib/completion.zsh
zinit is-snippet for OMZ::lib/grep.zsh
zinit is-snippet for OMZ::lib/termsupport.zsh
zinit is-snippet for OMZ::lib/theme-and-appearance.zsh
zinit is-snippet for OMZ::lib/key-bindings.zsh
zinit is-snippet for OMZ::lib/history.zsh
zinit is-snippet for OMZ::lib/git.zsh
zinit is-snippet for OMZ::plugins/git/git.plugin.zsh
zinit is-snippet for OMZ::plugins/ssh-agent/ssh-agent.plugin.zsh
zinit is-snippet for OMZ::plugins/gpg-agent/gpg-agent.plugin.zsh
zinit is-snippet for OMZ::plugins/history/history.plugin.zsh
zinit is-snippet for OMZ::plugins/extract/extract.plugin.zsh
zinit atload"zpcompinit" lucid as"completion" for OMZ::plugins/docker/_docker
# ============================================================================= #
turbo0; zinit for light-mode \
'zinit-zsh/z-a-patch-dl' \
'zinit-zsh/z-a-as-monitor' \
'zinit-zsh/z-a-bin-gem-node' \
'zinit-zsh/z-a-submods' \
'zinit-zsh/z-a-rust'
# ============================================================================= #
# Additional completion definitions
turbo0; zload 'lukechilds/zsh-better-npm-completion'
turbo0 blockf atpull'zinit creinstall -q .'
zload 'zsh-users/zsh-completions'
# Don't bind these keys until ready
bindkey -r '^[[A'
bindkey -r '^[[B'
__bind_history_keys() {
    bindkey '^[[A' history-substring-search-up
    bindkey '^[[B' history-substring-search-down
}
# History substring searching
turbo0 atload'__bind_history_keys'
zlight 'zsh-users/zsh-history-substring-search'
# History search by `Ctrl+R`
turbo1; zload 'zdharma/history-search-multi-word'
# Syntax highlighting
# (compinit without `-i` spawns warning on `sudo -s`)
turbo0 atinit"ZINIT[COMPINIT_OPTS]='-i' zpcompinit; zpcdreplay"
    zload zdharma/fast-syntax-highlighting
# Autosuggestions
# Note: should go _after_ syntax highlighting plugin
turbo0 atload"_zsh_autosuggest_start"; zload 'zsh-users/zsh-autosuggestions'
export ZSH_AUTOSUGGEST_USE_ASYNC=1
export ZSH_AUTOSUGGEST_MANUAL_REBIND=1
# ============================================================================= #
turbo1; zinit for light-mode \
'mafredri/zsh-async' \
'MichaelAquilina/zsh-you-should-use' \
'zpm-zsh/ls' \
'unixorn/git-extra-commands' \
'denysdovhan/gitio-zsh'

turbo2; zinit pack for \
dircolors-material \
ls_colors \
doctoc \
@asciidoctor

turbo1; zinit pack"bgn-binary" for fzf

turbo1 as"program" make'!' atclone'./direnv hook zsh > zhook.zsh' \
    atpull'%atclone' src"zhook.zsh"; zlight 'direnv/direnv'

turbo1 from"gh-r" as"program" mv"docker* -> docker-compose" bpick"*linux*" \
    zlight 'docker/compose'

#zinit ice lucid wait"0a" as"program" from"gh-r" mv"lazygit* -> lazygit" atload"alias lg='lazygit'" \
#    zinit light 'jesseduffield/lazygit'

#zinit ice lucid wait"0a" as"program" from"gh-r" mv"lazydocker* -> lazydocker" atload"alias lg='lazydocker'" \
#    zinit light 'jesseduffield/lazydocker'

turbo1 from"gh-r" as"program" mv"bat* -> bat" pick"bat/bat" atload"alias cat=bat" \
    zlight 'sharkdp/bat'
# BAT-EXTRAS
turbo1 as"program" pick"src/batgrep.sh" 
turbo1 as"program" pick"src/batdiff.sh"
zlight 'eth-p/bat-extras' 
    alias rg=batgrep.sh 
    alias bd=batdiff.sh 
    alias man=batman.sh
# ============================================================================= #
# *** ➜ ➜ ➜ [PYENV]
# ============================================================================= #
# Download the tarball with the default ice list
#zplugin pack for pyenv
# Download the tarball with the bin-gem-node annex-utilizing ice list
#zplugin pack"bgn" for pyenv
# Download with the bin-gem-node annex-utilizing ice list FROM GIT REPOSITORY
zinit pack"bgn" git for pyenv
# ============================================================================= #
# *** ➜ ➜ ➜ [NVM]
# ============================================================================= #
export NVM_COMPLETION='true'
export NVM_LAZY_LOAD='true'
export NVM_AUTO_USE='true'
export NVM_COLORS='cmgRY'
zlight lukechilds/zsh-nvm
# ============================================================================= #
# *** ➜ ➜ ➜ [RBENV]
# ============================================================================= #
zsnippet "$DOTFILES/zsh/plugins/zsh-rbenv.plugin.zsh"
# ============================================================================= #
# ============================================================================= #
unset -f turbo0 turbo1 turbo2 zcommand zload zlight zsnippet
# ============================================================================= #
# *** ➜ ➜ ➜ [THEMES]
# ============================================================================= #
zinit ice for \
    load"![[ $MYPROMPT = p10k ]]" \
    unload"![[ $MYPROMPT != p10k ]]" \
    depth='1'; zinit light romkatv/powerlevel10k

zinit lucid load"![[ $MYPROMPT = pure ]]" unload"![[ $MYPROMPT != pure ]]" \
    pick"/dev/null" multisrc"{async,pure}.zsh" atload'!prompt_pure_precmd' nocd for \
    sindresorhus/pure
# ============================================================================= #
# *** ➜ ➜ ➜ [LOCAL]
# ============================================================================= #
zinit is-snippet for \
    if"[[ -f $HOME/.localrc  ]]" $HOME/.localrc
# ============================================================================= #
# *** ➜ ➜ ➜ [p10k] [PROMPT]
# ============================================================================= #
if [ "$MYPROMPT" = p10k ]; then; source "$DOTFILES/zsh/themes/p10k.zsh"; fi